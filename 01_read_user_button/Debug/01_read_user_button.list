
01_read_user_button.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001f4  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800039c  080003a4  000103a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800039c  0800039c  000103a4  2**0
                  CONTENTS
  4 .ARM          00000000  0800039c  0800039c  000103a4  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800039c  080003a4  000103a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800039c  0800039c  0001039c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003a0  080003a0  000103a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000103a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000103a4  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000103a4  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000007b  00000000  00000000  000103d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000061  00000000  00000000  0001044f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  000104b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000030  00000000  00000000  000104f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000afb  00000000  00000000  00010528  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000000ff  00000000  00000000  00011023  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00002f9f  00000000  00000000  00011122  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000140c1  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000058  00000000  00000000  00014114  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000384 	.word	0x08000384

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000384 	.word	0x08000384

080001e8 <main>:
#define PIN15				(1U << 15)

#define DELAY				100000

int main()
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
	// clocklar aktif edilir.
	RCC_AHB1EN_R |= RCC_GPIOD_EN | RCC_GPIOA_EN;
 80001ee:	4b39      	ldr	r3, [pc, #228]	; (80002d4 <main+0xec>)
 80001f0:	681b      	ldr	r3, [r3, #0]
 80001f2:	4a38      	ldr	r2, [pc, #224]	; (80002d4 <main+0xec>)
 80001f4:	f043 0309 	orr.w	r3, r3, #9
 80001f8:	6013      	str	r3, [r2, #0]

	// portlar temizlenir.
	GPIOA_MODE_R &= 0xA8000000;
 80001fa:	4b37      	ldr	r3, [pc, #220]	; (80002d8 <main+0xf0>)
 80001fc:	681b      	ldr	r3, [r3, #0]
 80001fe:	4a36      	ldr	r2, [pc, #216]	; (80002d8 <main+0xf0>)
 8000200:	f003 4328 	and.w	r3, r3, #2818572288	; 0xa8000000
 8000204:	6013      	str	r3, [r2, #0]
	GPIOD_MODE_R &= 0x0;
 8000206:	4b35      	ldr	r3, [pc, #212]	; (80002dc <main+0xf4>)
 8000208:	681b      	ldr	r3, [r3, #0]
 800020a:	4b34      	ldr	r3, [pc, #208]	; (80002dc <main+0xf4>)
 800020c:	2200      	movs	r2, #0
 800020e:	601a      	str	r2, [r3, #0]

	// kart üzerindeki A0 portuna bağlı buton giriş olarak ayarlanır.
	// 0
	GPIOA_MODE_R &= ~(1U << 0);
 8000210:	4b31      	ldr	r3, [pc, #196]	; (80002d8 <main+0xf0>)
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	4a30      	ldr	r2, [pc, #192]	; (80002d8 <main+0xf0>)
 8000216:	f023 0301 	bic.w	r3, r3, #1
 800021a:	6013      	str	r3, [r2, #0]
	GPIOA_MODE_R &= ~(1U << 1);
 800021c:	4b2e      	ldr	r3, [pc, #184]	; (80002d8 <main+0xf0>)
 800021e:	681b      	ldr	r3, [r3, #0]
 8000220:	4a2d      	ldr	r2, [pc, #180]	; (80002d8 <main+0xf0>)
 8000222:	f023 0302 	bic.w	r3, r3, #2
 8000226:	6013      	str	r3, [r2, #0]


	// kart üzerindeki D12-15 portlarına bağlı ledler çıkış olarak ayarlanır.
	// 12
	GPIOD_MODE_R |= (1U << 24);
 8000228:	4b2c      	ldr	r3, [pc, #176]	; (80002dc <main+0xf4>)
 800022a:	681b      	ldr	r3, [r3, #0]
 800022c:	4a2b      	ldr	r2, [pc, #172]	; (80002dc <main+0xf4>)
 800022e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000232:	6013      	str	r3, [r2, #0]
	GPIOD_MODE_R &= ~(1U << 25);
 8000234:	4b29      	ldr	r3, [pc, #164]	; (80002dc <main+0xf4>)
 8000236:	681b      	ldr	r3, [r3, #0]
 8000238:	4a28      	ldr	r2, [pc, #160]	; (80002dc <main+0xf4>)
 800023a:	f023 7300 	bic.w	r3, r3, #33554432	; 0x2000000
 800023e:	6013      	str	r3, [r2, #0]
	// 13
	GPIOD_MODE_R |= (1U << 26);
 8000240:	4b26      	ldr	r3, [pc, #152]	; (80002dc <main+0xf4>)
 8000242:	681b      	ldr	r3, [r3, #0]
 8000244:	4a25      	ldr	r2, [pc, #148]	; (80002dc <main+0xf4>)
 8000246:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800024a:	6013      	str	r3, [r2, #0]
	GPIOD_MODE_R &= ~(1U << 27);
 800024c:	4b23      	ldr	r3, [pc, #140]	; (80002dc <main+0xf4>)
 800024e:	681b      	ldr	r3, [r3, #0]
 8000250:	4a22      	ldr	r2, [pc, #136]	; (80002dc <main+0xf4>)
 8000252:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8000256:	6013      	str	r3, [r2, #0]
	// 14
	GPIOD_MODE_R |= (1U << 28);
 8000258:	4b20      	ldr	r3, [pc, #128]	; (80002dc <main+0xf4>)
 800025a:	681b      	ldr	r3, [r3, #0]
 800025c:	4a1f      	ldr	r2, [pc, #124]	; (80002dc <main+0xf4>)
 800025e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000262:	6013      	str	r3, [r2, #0]
	GPIOD_MODE_R &= ~(1U << 29);
 8000264:	4b1d      	ldr	r3, [pc, #116]	; (80002dc <main+0xf4>)
 8000266:	681b      	ldr	r3, [r3, #0]
 8000268:	4a1c      	ldr	r2, [pc, #112]	; (80002dc <main+0xf4>)
 800026a:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
 800026e:	6013      	str	r3, [r2, #0]
	// 15
	GPIOD_MODE_R |= (1U << 30);
 8000270:	4b1a      	ldr	r3, [pc, #104]	; (80002dc <main+0xf4>)
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	4a19      	ldr	r2, [pc, #100]	; (80002dc <main+0xf4>)
 8000276:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800027a:	6013      	str	r3, [r2, #0]
	GPIOD_MODE_R &= ~(1U << 31);
 800027c:	4b17      	ldr	r3, [pc, #92]	; (80002dc <main+0xf4>)
 800027e:	681b      	ldr	r3, [r3, #0]
 8000280:	4a16      	ldr	r2, [pc, #88]	; (80002dc <main+0xf4>)
 8000282:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8000286:	6013      	str	r3, [r2, #0]

	int i = 0;
 8000288:	2300      	movs	r3, #0
 800028a:	607b      	str	r3, [r7, #4]

	while(1)
	{
		// Bit maskeleme ile PIN0 durumunu belirten bit okunarak kontrol sağlanır.
		while ((GPIOA_ID_R & PIN0))
 800028c:	e01a      	b.n	80002c4 <main+0xdc>
		{
			if ((GPIOA_ID_R & PIN0) == 0)
 800028e:	4b14      	ldr	r3, [pc, #80]	; (80002e0 <main+0xf8>)
 8000290:	681b      	ldr	r3, [r3, #0]
 8000292:	f003 0301 	and.w	r3, r3, #1
 8000296:	2b00      	cmp	r3, #0
 8000298:	d114      	bne.n	80002c4 <main+0xdc>
			{
				i++;
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	3301      	adds	r3, #1
 800029e:	607b      	str	r3, [r7, #4]
				GPIOD_OD_R ^= (1U << (12 + (i % 4)));
 80002a0:	4b10      	ldr	r3, [pc, #64]	; (80002e4 <main+0xfc>)
 80002a2:	681a      	ldr	r2, [r3, #0]
 80002a4:	687b      	ldr	r3, [r7, #4]
 80002a6:	4259      	negs	r1, r3
 80002a8:	f003 0303 	and.w	r3, r3, #3
 80002ac:	f001 0103 	and.w	r1, r1, #3
 80002b0:	bf58      	it	pl
 80002b2:	424b      	negpl	r3, r1
 80002b4:	330c      	adds	r3, #12
 80002b6:	2101      	movs	r1, #1
 80002b8:	fa01 f303 	lsl.w	r3, r1, r3
 80002bc:	4909      	ldr	r1, [pc, #36]	; (80002e4 <main+0xfc>)
 80002be:	4053      	eors	r3, r2
 80002c0:	600b      	str	r3, [r1, #0]
				break;
 80002c2:	e005      	b.n	80002d0 <main+0xe8>
		while ((GPIOA_ID_R & PIN0))
 80002c4:	4b06      	ldr	r3, [pc, #24]	; (80002e0 <main+0xf8>)
 80002c6:	681b      	ldr	r3, [r3, #0]
 80002c8:	f003 0301 	and.w	r3, r3, #1
 80002cc:	2b00      	cmp	r3, #0
 80002ce:	d1de      	bne.n	800028e <main+0xa6>
 80002d0:	e7f8      	b.n	80002c4 <main+0xdc>
 80002d2:	bf00      	nop
 80002d4:	40023830 	.word	0x40023830
 80002d8:	40020000 	.word	0x40020000
 80002dc:	40020c00 	.word	0x40020c00
 80002e0:	40020010 	.word	0x40020010
 80002e4:	40020c14 	.word	0x40020c14

080002e8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002e8:	480d      	ldr	r0, [pc, #52]	; (8000320 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ea:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002ec:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002f0:	480c      	ldr	r0, [pc, #48]	; (8000324 <LoopForever+0x6>)
  ldr r1, =_edata
 80002f2:	490d      	ldr	r1, [pc, #52]	; (8000328 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002f4:	4a0d      	ldr	r2, [pc, #52]	; (800032c <LoopForever+0xe>)
  movs r3, #0
 80002f6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002f8:	e002      	b.n	8000300 <LoopCopyDataInit>

080002fa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002fa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002fc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002fe:	3304      	adds	r3, #4

08000300 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000300:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000302:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000304:	d3f9      	bcc.n	80002fa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000306:	4a0a      	ldr	r2, [pc, #40]	; (8000330 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000308:	4c0a      	ldr	r4, [pc, #40]	; (8000334 <LoopForever+0x16>)
  movs r3, #0
 800030a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800030c:	e001      	b.n	8000312 <LoopFillZerobss>

0800030e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800030e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000310:	3204      	adds	r2, #4

08000312 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000312:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000314:	d3fb      	bcc.n	800030e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000316:	f000 f811 	bl	800033c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800031a:	f7ff ff65 	bl	80001e8 <main>

0800031e <LoopForever>:

LoopForever:
    b LoopForever
 800031e:	e7fe      	b.n	800031e <LoopForever>
  ldr   r0, =_estack
 8000320:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000324:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000328:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800032c:	080003a4 	.word	0x080003a4
  ldr r2, =_sbss
 8000330:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000334:	2000001c 	.word	0x2000001c

08000338 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000338:	e7fe      	b.n	8000338 <ADC_IRQHandler>
	...

0800033c <__libc_init_array>:
 800033c:	b570      	push	{r4, r5, r6, lr}
 800033e:	4d0d      	ldr	r5, [pc, #52]	; (8000374 <__libc_init_array+0x38>)
 8000340:	4c0d      	ldr	r4, [pc, #52]	; (8000378 <__libc_init_array+0x3c>)
 8000342:	1b64      	subs	r4, r4, r5
 8000344:	10a4      	asrs	r4, r4, #2
 8000346:	2600      	movs	r6, #0
 8000348:	42a6      	cmp	r6, r4
 800034a:	d109      	bne.n	8000360 <__libc_init_array+0x24>
 800034c:	4d0b      	ldr	r5, [pc, #44]	; (800037c <__libc_init_array+0x40>)
 800034e:	4c0c      	ldr	r4, [pc, #48]	; (8000380 <__libc_init_array+0x44>)
 8000350:	f000 f818 	bl	8000384 <_init>
 8000354:	1b64      	subs	r4, r4, r5
 8000356:	10a4      	asrs	r4, r4, #2
 8000358:	2600      	movs	r6, #0
 800035a:	42a6      	cmp	r6, r4
 800035c:	d105      	bne.n	800036a <__libc_init_array+0x2e>
 800035e:	bd70      	pop	{r4, r5, r6, pc}
 8000360:	f855 3b04 	ldr.w	r3, [r5], #4
 8000364:	4798      	blx	r3
 8000366:	3601      	adds	r6, #1
 8000368:	e7ee      	b.n	8000348 <__libc_init_array+0xc>
 800036a:	f855 3b04 	ldr.w	r3, [r5], #4
 800036e:	4798      	blx	r3
 8000370:	3601      	adds	r6, #1
 8000372:	e7f2      	b.n	800035a <__libc_init_array+0x1e>
 8000374:	0800039c 	.word	0x0800039c
 8000378:	0800039c 	.word	0x0800039c
 800037c:	0800039c 	.word	0x0800039c
 8000380:	080003a0 	.word	0x080003a0

08000384 <_init>:
 8000384:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000386:	bf00      	nop
 8000388:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800038a:	bc08      	pop	{r3}
 800038c:	469e      	mov	lr, r3
 800038e:	4770      	bx	lr

08000390 <_fini>:
 8000390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000392:	bf00      	nop
 8000394:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000396:	bc08      	pop	{r3}
 8000398:	469e      	mov	lr, r3
 800039a:	4770      	bx	lr
