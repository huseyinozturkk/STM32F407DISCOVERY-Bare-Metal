#define PERIPH_BASE 			(0x40000000UL)
#define AHB1PERIPH_OFFSET 		(0x15800UL)

#define AHB1PERIPH_BASE			(PERIPH_BASE + AHB1PERIPH_OFFSET)
#define GPIOD_OFFSET			(0x20C00UL)

#define GPIOD_BASE 				(AHB1PERIPH_BASE + GPIOD_OFFSET)

#define RCC_OFFSET				(0x23800UL)
#define RCC_BASE				(AHB1PERIPH_BASE + RCC_OFFSET)

#define AHB1EN_R_OFFSET			(0x30UL)
#define RCC_AHB1EN_R			(*(volatile unsigned int *)(RCC_BASE + AHB1EN_R_OFFSET))

#define GPIODEN					(1U << 3)

#define MODE_R_OFFSET 			(0x00UL)
#define GPIOD_MODE_R			(*(volatile unsigned int *)(GPIOD_BASE + MODE_R_OFFSET))

#define OD_R_OFFSET 			(0x14UL)
#define GPIOD_OD_R				(*(volatile unsigned int *)(GPIOD_BASE + ODR_R_OFFSET))

#define PIN12					(1U << 12)
#define PIN13					(1U << 13)
#define PIN14					(1U << 14)
#define PIN15					(1U << 15)

// D12 D13 D14 D15 gpio out

// D12

int main(void)
{
	// Enable clock
	RCC_AHB1EN_R |= GPIODEN;
	// Set gpiod 12,...,15 as output
	// 12
	GPIOD_MODE_R |= (1U << 24);
	GPIOD_MODE_R &= ~(1U << 25);

	GPIOD_MODE_R |= (1U << 26);
	GPIOD_MODE_R &= ~(1U << 27);

	GPIOD_MODE_R |= (1U << 28);
	GPIOD_MODE_R &= ~(1U << 29);

	GPIOD_MODE_R |= (1U << 30);
	GPIOD_MODE_R &= ~(1U << 31);

	while(1)
	{
		// Turn on led
	}

	return 0;
}
