#include "stm32f407xx.h"


// USART5 APB1 42MHz
// RX - PD2
// TX - C12 -- bu uygulamada sadece tx calÄ±sacak - AF8

// GPIO - AHB1

#define GPIOC_EN		(1U << 2)
#define GPIOD_EN		(1U << 3)

#define UART5_EN 		(1U << 20)
#define CR1_TE			(1u << 3)	// USART Transmit en

#define SYS_FREQ 		16000000
#define APB1_CLK		SYS_FREQ
#define UART_BAUDRATE 	115200

static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t baudRate);
static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t baudRate);

int main() {

	while(1) {

	}

	return 0;
}

void uart5_tx_init() {

	// uart gpio -----------------------

	// gpioc clock en
	RCC->AHB1ENR |= GPIOC_EN;
	// set c12 mode to AF mode 10
	GPIOC->MODER &= ~(1U << 24); // 0
	GPIOC->MODER |= (1U << 25);  // 1
	// set c12 af type to uart5_tx   1000
	GPIOC->AFR[2] |= (1U << 19);
	GPIOC->AFR[2] &= ~(1U << 18);
	GPIOC->AFR[2] &= ~(1U << 17);
	GPIOC->AFR[2] &= ~(1U << 16);
	// uart config ----------------------

	// uart clock en
	RCC->APB1ENR |= UART5_EN;
	// baud rate
	uart_set_baudrate(UART5, APB1_CLK, UART_BAUDRATE);
	// transfer direction
	UART5->CR1 |= CR1_TE;
	// en uart

}

static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t baudRate) {
	USARTx->BRR = compute_uart_bd(PeriphClk, baudRate);
}

static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t baudRate) {
	return ((PeriphClk + (baudRate / 2U))/baudRate);
}
