
03_gpio_bsrr.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001e8  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000390  08000398  00010398  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000390  08000390  00010398  2**0
                  CONTENTS
  4 .ARM          00000000  08000390  08000390  00010398  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000390  08000398  00010398  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000390  08000390  00010390  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000394  08000394  00010394  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010398  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010398  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010398  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000403  00000000  00000000  000103c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000113  00000000  00000000  000107cb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  000108e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000030  00000000  00000000  00010928  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000180fe  00000000  00000000  00010958  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000583  00000000  00000000  00028a56  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00087a71  00000000  00000000  00028fd9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  000b0a4a  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000058  00000000  00000000  000b0aa0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000378 	.word	0x08000378

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000378 	.word	0x08000378

080001e8 <main>:
#define PIN15				(1U << 15)

#define DELAY 				100000

int main()
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= GPIOD_EN;
 80001ee:	4b38      	ldr	r3, [pc, #224]	; (80002d0 <main+0xe8>)
 80001f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001f2:	4a37      	ldr	r2, [pc, #220]	; (80002d0 <main+0xe8>)
 80001f4:	f043 0308 	orr.w	r3, r3, #8
 80001f8:	6313      	str	r3, [r2, #48]	; 0x30

	// D portu temizlenir
	GPIOD->MODER &= 0x0;
 80001fa:	4b36      	ldr	r3, [pc, #216]	; (80002d4 <main+0xec>)
 80001fc:	681b      	ldr	r3, [r3, #0]
 80001fe:	4b35      	ldr	r3, [pc, #212]	; (80002d4 <main+0xec>)
 8000200:	2200      	movs	r2, #0
 8000202:	601a      	str	r2, [r3, #0]

	// D12 çıkış olarak ayarlanır
	GPIOD->MODER |= (1U << 24);
 8000204:	4b33      	ldr	r3, [pc, #204]	; (80002d4 <main+0xec>)
 8000206:	681b      	ldr	r3, [r3, #0]
 8000208:	4a32      	ldr	r2, [pc, #200]	; (80002d4 <main+0xec>)
 800020a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800020e:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &= ~(1U << 25);
 8000210:	4b30      	ldr	r3, [pc, #192]	; (80002d4 <main+0xec>)
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	4a2f      	ldr	r2, [pc, #188]	; (80002d4 <main+0xec>)
 8000216:	f023 7300 	bic.w	r3, r3, #33554432	; 0x2000000
 800021a:	6013      	str	r3, [r2, #0]
	// 13
	GPIOD->MODER |= (1U << 26);
 800021c:	4b2d      	ldr	r3, [pc, #180]	; (80002d4 <main+0xec>)
 800021e:	681b      	ldr	r3, [r3, #0]
 8000220:	4a2c      	ldr	r2, [pc, #176]	; (80002d4 <main+0xec>)
 8000222:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000226:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &= ~(1U << 27);
 8000228:	4b2a      	ldr	r3, [pc, #168]	; (80002d4 <main+0xec>)
 800022a:	681b      	ldr	r3, [r3, #0]
 800022c:	4a29      	ldr	r2, [pc, #164]	; (80002d4 <main+0xec>)
 800022e:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8000232:	6013      	str	r3, [r2, #0]
	// 14
	GPIOD->MODER |= (1U << 28);
 8000234:	4b27      	ldr	r3, [pc, #156]	; (80002d4 <main+0xec>)
 8000236:	681b      	ldr	r3, [r3, #0]
 8000238:	4a26      	ldr	r2, [pc, #152]	; (80002d4 <main+0xec>)
 800023a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800023e:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &= ~(1U << 29);
 8000240:	4b24      	ldr	r3, [pc, #144]	; (80002d4 <main+0xec>)
 8000242:	681b      	ldr	r3, [r3, #0]
 8000244:	4a23      	ldr	r2, [pc, #140]	; (80002d4 <main+0xec>)
 8000246:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
 800024a:	6013      	str	r3, [r2, #0]
	// 15
	GPIOD->MODER |= (1U << 30);
 800024c:	4b21      	ldr	r3, [pc, #132]	; (80002d4 <main+0xec>)
 800024e:	681b      	ldr	r3, [r3, #0]
 8000250:	4a20      	ldr	r2, [pc, #128]	; (80002d4 <main+0xec>)
 8000252:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8000256:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &= ~(1U << 31);
 8000258:	4b1e      	ldr	r3, [pc, #120]	; (80002d4 <main+0xec>)
 800025a:	681b      	ldr	r3, [r3, #0]
 800025c:	4a1d      	ldr	r2, [pc, #116]	; (80002d4 <main+0xec>)
 800025e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8000262:	6013      	str	r3, [r2, #0]

	while(1)
	{
		// Set
		GPIOD->BSRR = PIN12;
 8000264:	4b1b      	ldr	r3, [pc, #108]	; (80002d4 <main+0xec>)
 8000266:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800026a:	619a      	str	r2, [r3, #24]
		GPIOD->BSRR = PIN13;
 800026c:	4b19      	ldr	r3, [pc, #100]	; (80002d4 <main+0xec>)
 800026e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000272:	619a      	str	r2, [r3, #24]
		GPIOD->BSRR = PIN14;
 8000274:	4b17      	ldr	r3, [pc, #92]	; (80002d4 <main+0xec>)
 8000276:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800027a:	619a      	str	r2, [r3, #24]
		GPIOD->BSRR = PIN15;
 800027c:	4b15      	ldr	r3, [pc, #84]	; (80002d4 <main+0xec>)
 800027e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8000282:	619a      	str	r2, [r3, #24]

		for(int i = 0; i < DELAY; i++){}
 8000284:	2300      	movs	r3, #0
 8000286:	607b      	str	r3, [r7, #4]
 8000288:	e002      	b.n	8000290 <main+0xa8>
 800028a:	687b      	ldr	r3, [r7, #4]
 800028c:	3301      	adds	r3, #1
 800028e:	607b      	str	r3, [r7, #4]
 8000290:	687b      	ldr	r3, [r7, #4]
 8000292:	4a11      	ldr	r2, [pc, #68]	; (80002d8 <main+0xf0>)
 8000294:	4293      	cmp	r3, r2
 8000296:	ddf8      	ble.n	800028a <main+0xa2>

		// Reset
		GPIOD->BSRR = (1U << 28);
 8000298:	4b0e      	ldr	r3, [pc, #56]	; (80002d4 <main+0xec>)
 800029a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800029e:	619a      	str	r2, [r3, #24]
		GPIOD->BSRR = (1U << 29);
 80002a0:	4b0c      	ldr	r3, [pc, #48]	; (80002d4 <main+0xec>)
 80002a2:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 80002a6:	619a      	str	r2, [r3, #24]
		GPIOD->BSRR = (1U << 30);
 80002a8:	4b0a      	ldr	r3, [pc, #40]	; (80002d4 <main+0xec>)
 80002aa:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80002ae:	619a      	str	r2, [r3, #24]
		GPIOD->BSRR = (1U << 31);
 80002b0:	4b08      	ldr	r3, [pc, #32]	; (80002d4 <main+0xec>)
 80002b2:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80002b6:	619a      	str	r2, [r3, #24]

		for(int i = 0; i < DELAY; i++){}
 80002b8:	2300      	movs	r3, #0
 80002ba:	603b      	str	r3, [r7, #0]
 80002bc:	e002      	b.n	80002c4 <main+0xdc>
 80002be:	683b      	ldr	r3, [r7, #0]
 80002c0:	3301      	adds	r3, #1
 80002c2:	603b      	str	r3, [r7, #0]
 80002c4:	683b      	ldr	r3, [r7, #0]
 80002c6:	4a04      	ldr	r2, [pc, #16]	; (80002d8 <main+0xf0>)
 80002c8:	4293      	cmp	r3, r2
 80002ca:	ddf8      	ble.n	80002be <main+0xd6>
		GPIOD->BSRR = PIN12;
 80002cc:	e7ca      	b.n	8000264 <main+0x7c>
 80002ce:	bf00      	nop
 80002d0:	40023800 	.word	0x40023800
 80002d4:	40020c00 	.word	0x40020c00
 80002d8:	0001869f 	.word	0x0001869f

080002dc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002dc:	480d      	ldr	r0, [pc, #52]	; (8000314 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002de:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002e0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002e4:	480c      	ldr	r0, [pc, #48]	; (8000318 <LoopForever+0x6>)
  ldr r1, =_edata
 80002e6:	490d      	ldr	r1, [pc, #52]	; (800031c <LoopForever+0xa>)
  ldr r2, =_sidata
 80002e8:	4a0d      	ldr	r2, [pc, #52]	; (8000320 <LoopForever+0xe>)
  movs r3, #0
 80002ea:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002ec:	e002      	b.n	80002f4 <LoopCopyDataInit>

080002ee <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ee:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002f0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002f2:	3304      	adds	r3, #4

080002f4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002f4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002f6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002f8:	d3f9      	bcc.n	80002ee <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002fa:	4a0a      	ldr	r2, [pc, #40]	; (8000324 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002fc:	4c0a      	ldr	r4, [pc, #40]	; (8000328 <LoopForever+0x16>)
  movs r3, #0
 80002fe:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000300:	e001      	b.n	8000306 <LoopFillZerobss>

08000302 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000302:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000304:	3204      	adds	r2, #4

08000306 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000306:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000308:	d3fb      	bcc.n	8000302 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800030a:	f000 f811 	bl	8000330 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800030e:	f7ff ff6b 	bl	80001e8 <main>

08000312 <LoopForever>:

LoopForever:
    b LoopForever
 8000312:	e7fe      	b.n	8000312 <LoopForever>
  ldr   r0, =_estack
 8000314:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000318:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800031c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000320:	08000398 	.word	0x08000398
  ldr r2, =_sbss
 8000324:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000328:	2000001c 	.word	0x2000001c

0800032c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800032c:	e7fe      	b.n	800032c <ADC_IRQHandler>
	...

08000330 <__libc_init_array>:
 8000330:	b570      	push	{r4, r5, r6, lr}
 8000332:	4d0d      	ldr	r5, [pc, #52]	; (8000368 <__libc_init_array+0x38>)
 8000334:	4c0d      	ldr	r4, [pc, #52]	; (800036c <__libc_init_array+0x3c>)
 8000336:	1b64      	subs	r4, r4, r5
 8000338:	10a4      	asrs	r4, r4, #2
 800033a:	2600      	movs	r6, #0
 800033c:	42a6      	cmp	r6, r4
 800033e:	d109      	bne.n	8000354 <__libc_init_array+0x24>
 8000340:	4d0b      	ldr	r5, [pc, #44]	; (8000370 <__libc_init_array+0x40>)
 8000342:	4c0c      	ldr	r4, [pc, #48]	; (8000374 <__libc_init_array+0x44>)
 8000344:	f000 f818 	bl	8000378 <_init>
 8000348:	1b64      	subs	r4, r4, r5
 800034a:	10a4      	asrs	r4, r4, #2
 800034c:	2600      	movs	r6, #0
 800034e:	42a6      	cmp	r6, r4
 8000350:	d105      	bne.n	800035e <__libc_init_array+0x2e>
 8000352:	bd70      	pop	{r4, r5, r6, pc}
 8000354:	f855 3b04 	ldr.w	r3, [r5], #4
 8000358:	4798      	blx	r3
 800035a:	3601      	adds	r6, #1
 800035c:	e7ee      	b.n	800033c <__libc_init_array+0xc>
 800035e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000362:	4798      	blx	r3
 8000364:	3601      	adds	r6, #1
 8000366:	e7f2      	b.n	800034e <__libc_init_array+0x1e>
 8000368:	08000390 	.word	0x08000390
 800036c:	08000390 	.word	0x08000390
 8000370:	08000390 	.word	0x08000390
 8000374:	08000394 	.word	0x08000394

08000378 <_init>:
 8000378:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800037a:	bf00      	nop
 800037c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800037e:	bc08      	pop	{r3}
 8000380:	469e      	mov	lr, r3
 8000382:	4770      	bx	lr

08000384 <_fini>:
 8000384:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000386:	bf00      	nop
 8000388:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800038a:	bc08      	pop	{r3}
 800038c:	469e      	mov	lr, r3
 800038e:	4770      	bx	lr
